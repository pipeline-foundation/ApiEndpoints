name: CI/CD Pipeline

on: [push, pull_request, workflow_dispatch]

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET Core
        id: setup_dotnet_core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.202

      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Build solution
        id: build_solution
        shell: pwsh
        run: |
          dotnet build .\Ardalis.ApiEndpoints.sln -c Release

      - name: Run unit tests
        id: run_unit_tests
        shell: pwsh
        run: |
          dotnet test

  cd:
    name: Continuous Deployment
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.202
      
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Filter changes
        id: filter_changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            codeanalyzers:
              - 'src/Ardalis.ApiEndpoints.CodeAnalyzers/**'
            apiendpoints:
              - 'src/Ardalis.ApiEndpoints/**'

      - if: steps.filter_changes.outputs.codeanalyzers == 'true'
        name: Create and publish ApiEndpoints CodeAnalyzers package to NuGet
        id: create_and_publish_codeanalyzer_nupkg
        uses: rohith/publish-nuget@v2
        with:
          PROJECT_FILE_PATH: src/Ardalis.ApiEndpoints.CodeAnalyzers/Ardalis.ApiEndpoints.CodeAnalyzers.csproj # Relative to repository root
          # VERSION_FILE_PATH: Directory.Build.props # Filepath with version info, relative to repository root. Defaults to project file
          VERSION_REGEX: <Version>(.*)<\/Version> # Regex pattern to extract version info in a capturing group
          TAG_COMMIT: true # Flag to enable / disable git tagging
          TAG_FORMAT: Analyzer_v* # Format of the git tag, [*] gets replaced with version
          NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key

      - if: steps.filter_changes.outputs.apiendpoints == 'true'
        name: Create and publish ApiEndpoints package to NuGet
        id: create_and_publish_apiendpoints_nupkg
        uses: rohith/publish-nuget@v2
        with:
          PROJECT_FILE_PATH: src/Ardalis.ApiEndpoints/Ardalis.ApiEndpoints.csproj # Relative to repository root
          # VERSION_FILE_PATH: Directory.Build.props # Filepath with version info, relative to repository root. Defaults to project file
          VERSION_REGEX: <Version>(.*)<\/Version> # Regex pattern to extract version info in a capturing group
          TAG_COMMIT: true # Flag to enable / disable git tagging
          TAG_FORMAT: v* # Format of the git tag, [*] gets replaced with version
          NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key